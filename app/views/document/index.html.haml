- @active_tab = "DocumentIndex"
- @onload = "docLoad()"

- if loggedIn?
    - content_for(:left) do
        .btn-group.btn-group-justified.bottom
            %a.btn.btn-default{:href=>new_document_path} New Doc
            - if @current_doc != nil
                = link_to 'Destroy', document_path(@current_doc), :confirm => 'Are you sure?', :method => :delete, :class=>"btn btn-default"
        %br
        %ul.nav.nav-pills.nav-stacked
            - @documents.each do |doc|
                - if @current_doc != nil and @current_doc[:id] == doc[:id]
                    %li.active
                        %a#menu_entry{:href=>document_path(doc)}
                            = doc.name
                -else
                    %li
                        %a{:href=>document_path(doc)}
                            = doc.name

    - content_for(:right) do
        -if @current_doc != nil
            %div#document_id{:style=>"display: none;"}
                =@current_doc[:id]
            .input-group
                %input.form-control#document_title{:type=>"text", :value=>@current_doc[:name]}
                %span.input-group-addon#doc_badge
                    Saved
            %select.form-control{:onchange=>"setHighlighting(this)"}
                %option Syntax Highlighting...
                %option{:value=>"plaintext"} Plaintext
                %option{:value=>"text/x-ruby"} Ruby
                %option{:value=>"javascript"} Javascript
            %br
            %textarea.form-control#main_document{:rows=>20}
                = preserve do
                    =@current_doc[:content]
            
    = render :partial => "shared/large_format"
- else
    = render :partial => "shared/need_login"
